- name: (OSX) Install System Packages for building nvim
  homebrew:
    name: "{{ item }}"
  loop: 
    - ninja
    - libtool
    - automake
    - cmake
    - pkg-config
    - gettext
    - curl
      
- name: Clone Neovim
  ansible.builtin.git:
    repo: 'https://github.com/neovim/neovim.git'
    dest: "~/neovim"
    update: yes

- name: Build neovim
  become_user: root
  shell: "cd ~/neovim && make"

- name: Install neovim
  shell: "cd ~/neovim && sudo make install"

# - name: Check if pynvim venv3 exists
#   stat:
#     path: "~/.config/nvim/"
#   register: pynvim_venv3_exists

# - name: Install pynvim venv3
#   when: pynvim_venv3_path.stat.islnk is not defined
#   shell: |
#     cd ~/.config/nvim/
#     python3 -m venv .venv3  --prompt nvim3

# - name: Install pynvim into venv3
#   pip:
#     name: pynvim
#     virtualenv: "~/.config/nvim/.venv3"

# - name: Check if pynvim venv2 exists
#   stat:
#     path: "~/.config/nvim/"
#   register: pynvim_venv2_path

# - name: Install neovim venv2
#   when: pynvim_venv2_path.stat.islnk is not defined
#   shell: |
#     cd ~/.config/nvim/
#     python2 -m virtualenv .venv2  --prompt nvim2


# # Formatters
# - name: check is black installed
#   shell: command -v black
#   register: black_exists
#   ignore_errors: yes
#   tags: |
#     - black

# - name: install black
#   when: black_exists is failed
#   shell: pipx install black
#   tags: |
#     - black

# - name: install neovim for nodejs
#   community.general.npm:
#     name: neovim
#     global: yes

# - name: Install pynvim into venv2
#   pip:
#     name: pynvim
#     virtualenv: "~/.config/nvim/.venv2"

# - name: check is luarocks installed
#   shell: command -v luarocks
#   register: luarocks_exists
#   ignore_errors: yes

# - name: Neovim Plugin Development 1
#   when: luarocks_exists is failed
#   become_user: root
#   apt: name=luarocks

# - name: check is luacheck installed
#   shell: command -v luacheck
#   register: luacheck_exists
#   ignore_errors: yes

