unbind C-b

# Enable mouse control (clickable windows, panes, resizable panes)
set -g mouse on
set -g prefix M-Space
set -s escape-time 0
set-option default-terminal "tmux-256color"
# set-option -a terminal-overrides ",*256col*:RGB"
set-option -gw xterm-keys on

bind-key r source-file ~/.tmux.conf \; display-message "Tmux config reloaded!"

bind -n M-h select-pane -L
bind -n M-l select-pane -R
bind -n M-k select-pane -U
bind -n M-j select-pane -D

# vi mode
set -g status-keys vi
setw -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-selection-and-cancel
bind-key -T copy-mode-vi Escape send -X cancel
bind-key -T copy-mode-vi d send -X halfpage-down
bind-key -T copy-mode-vi u send -X halfpage-up

# toggle pane for vim
bind-key -n M-t run-shell "tmux-toggle-pane"

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# split panes using | and -
bind -n M-+ if-shell "$is_vim" 'split-window -h -l 110 -c "#{pane_current_path}"' "split-window -h -c '#{pane_current_path}"
bind -n M-_ if-shell "$is_vim" 'split-window -v -l 25 -c "#{pane_current_path}"' "split-window -v -c '#{pane_current_path}"

bind-key -n M-Left if-shell "$is_vim" 'send-keys M-Left'  'resize-pane -L 3'
bind-key -n M-Right if-shell "$is_vim" 'send-keys M-Right'  'resize-pane -R 3'
bind-key -n M-Down if-shell "$is_vim" 'send-keys M-Down'  'resize-pane -D 3'
bind-key -n M-Up   if-shell "$is_vim" 'send-keys M-Up'  'resize-pane -U 3'
bind -n M-z resize-pane -Z

# close panes
bind -n M-w if-shell "$is_vim" 'confirm-before -p "Are you sure you want to close this pane #P? (y/n)" kill-pane' 'kill-pane'
bind -n M-q if-shell "$is_vim" 'confirm-before -p "Are you sure you want to close this pane #P? (y/n)" kill-pane' 'kill-window'

# move between windows
bind -n M-[ previous-window
bind -n M-] next-window
bind -n M-1 if-shell 'tmux select-window -t :0' '' 'new-window -t :0 -n editor -c "#{pane_current_path}"'
bind -n M-2 if-shell 'tmux select-window -t :1' '' 'new-window -t :1 -n git -c "#{pane_current_path}"; send-keys "lg" C-m'
bind -n M-3 if-shell 'tmux select-window -t :2' '' 'new-window -t :2 -n server -c "#{pane_current_path}"'
bind -n M-4 if-shell 'tmux select-window -t :3' '' 'new-window -t :3 -n extra -c "#{pane_current_path}"'
bind -n M-5 if-shell 'tmux select-window -t :4' '' 'new-window -t :4 -n k9s -c "#{pane_current_path}"; send-keys "k9s" C-m'

bind-key -n M-< swap-window -t -1\; select-window -t -1
bind-key -n M-> swap-window -t +1\; select-window -t +1

bind c new-window -c '#{pane_current_path}'

bind Q kill-server

bind-key b break-pane -d

unbind '"'
unbind %

# apply custom catppuccin theme
run '~/.tmux/plugins/catppuccin/catppuccin-mocha.tmuxtheme'

set -Fg 'status-format[0]' '#{status-format[0]}'
set -g 'status-format[1]' ''
set -g status 2
set-option -g status-position top

# Launchers
bind -n M-f display-popup -E "tmux-sessionizer"
bind -n M-s display-popup -E "\
    tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
    sed '/^$/d' |\
    fzf --header 'jump-to-session' |\
    xargs tmux switch-client -t"

bind -n M-g display-popup -E "tmux new-session -A -s scratch"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'kitty'

if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize tmux plugin manager
run '~/.tmux/plugins/tpm/tpm'

